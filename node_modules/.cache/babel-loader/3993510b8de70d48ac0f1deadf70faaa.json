{"ast":null,"code":"var _jsxFileName = \"/Users/xingkaiyang/Desktop/react-app/src/componets/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\"; // class Counters extends Component {\n//   render() {\n//     return (\n//       <div className=\"container-fluid\">\n//         <button className=\"btn btn-primary mb-2\" onClick={this.props.onReset}>\n//           Reset\n//         </button>\n//         {this.props.counters.map(counter => (\n//           //in order to make value to work, you have to pass it to Counter, this is a .props\n//           <Counter\n//             key={counter.id}\n//             onDelete={this.props.onDelete}\n//             onIncrement={this.props.onIncrement}\n//             // value={counter.value}\n//             // id={counter.id} // we can just pass the object make code look clean and better\n//             counter={counter}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n// export default Counters;\n\nclass Counters extends Component {\n  //using  Destructuring Arguments to simplify code with eliminating \"this.props\"\n  render() {\n    const _this$props = this.props,\n          onReset = _this$props.onReset,\n          onIncrement = _this$props.onIncrement,\n          onDelete = _this$props.onDelete,\n          counters = _this$props.counters,\n          onDecrement = _this$props.onDecrement;\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary mb-2\",\n      onClick: onReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Reset\"), counters.map(counter => //in order to make value to work, you have to pass it to Counter, this is a .props\n    React.createElement(Counter, {\n      key: counter.id,\n      onDelete: onDelete,\n      onIncrement: onIncrement,\n      onDecrement: onDecrement // value={counter.value}\n      // id={counter.id} // we can just pass the object make code look clean and better\n      ,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/xingkaiyang/Desktop/react-app/src/componets/counters.jsx"],"names":["React","Component","Counter","Counters","render","props","onReset","onIncrement","onDelete","counters","onDecrement","map","counter","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/B;AAEAG,EAAAA,MAAM,GAAG;AAAA,wBAOH,KAAKC,KAPF;AAAA,UAELC,OAFK,eAELA,OAFK;AAAA,UAGLC,WAHK,eAGLA,WAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAQP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAEJ,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAKGG,QAAQ,CAACE,GAAT,CAAaC,OAAO,IACnB;AAEA,wBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,QAAQ,EAAEL,QAFZ;AAGE,MAAA,WAAW,EAAED,WAHf;AAIE,MAAA,WAAW,EAAEG,WAJf,CAKE;AACA;AANF;AAOE,MAAA,OAAO,EAAEE,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CALH,CADF;AAqBD;;AAhC8B;;AAmCjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\n// class Counters extends Component {\n\n//   render() {\n\n//     return (\n//       <div className=\"container-fluid\">\n//         <button className=\"btn btn-primary mb-2\" onClick={this.props.onReset}>\n//           Reset\n//         </button>\n\n//         {this.props.counters.map(counter => (\n//           //in order to make value to work, you have to pass it to Counter, this is a .props\n\n//           <Counter\n//             key={counter.id}\n//             onDelete={this.props.onDelete}\n//             onIncrement={this.props.onIncrement}\n//             // value={counter.value}\n//             // id={counter.id} // we can just pass the object make code look clean and better\n//             counter={counter}\n//           />\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n\n// export default Counters;\n\nclass Counters extends Component {\n  //using  Destructuring Arguments to simplify code with eliminating \"this.props\"\n\n  render() {\n    const {\n      onReset,\n      onIncrement,\n      onDelete,\n      counters,\n      onDecrement\n    } = this.props;\n    return (\n      <div className=\"container-fluid\">\n        <button className=\"btn btn-primary mb-2\" onClick={onReset}>\n          Reset\n        </button>\n\n        {counters.map(counter => (\n          //in order to make value to work, you have to pass it to Counter, this is a .props\n\n          <Counter\n            key={counter.id}\n            onDelete={onDelete}\n            onIncrement={onIncrement}\n            onDecrement={onDecrement}\n            // value={counter.value}\n            // id={counter.id} // we can just pass the object make code look clean and better\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}