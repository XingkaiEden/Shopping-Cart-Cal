{"ast":null,"code":"var _jsxFileName = \"/Users/xingkaiyang/Desktop/react-app/src/componets/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { link } from \"fs\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      // imageUrl: \"https://picsum.photos/300\",\n      // tags: [\"tag1\", \"tag2\", \"tag3\"]\n      tags: []\n    };\n    this.styles = {\n      fontSize: 50,\n      fontWeight: \"bold\"\n    };\n\n    this.formateCounter = () => {\n      const count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    };\n  }\n\n  renderTag() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"There is no items in the list!\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, tag)));\n  }\n\n  handleIncreament() {\n    console.log(\"sdfasdf\");\n  }\n\n  render() {\n    // let classes = \"badge mr-2 badge-\";\n    // classes += this.state.count === 0? \"warning\": \"primary\";\n    // this is dynamically rendering\n    // you can refactor above to a method: shortcut: ctrl+shift+r  then you can call the method directly in html\n    // let classes = this.getBadgeClasses();\n    // conditional rendering two method: due to there is no if statement in jsx, then below\n    //1. use a function in this case is renderTag()\n    //2. use javascript mechanism ex: true&&'string'&&1 return 1\n    // reason is javacript can && with non-boolean value, non-empty string and non-zero number will be consider as true, then it will return the last condition.\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.formateCounter()), React.createElement(\"button\", {\n      // here is why is handleIncreament not handleIncreament(),\n      // you pass the reference not the method\n      onClick: this.handleIncreament,\n      className: \"btn btn-primary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.tags.map(tag => {\n      return React.createElement(\"li\", {\n        key: tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, tag);\n    })), this.renderTag(), this.state.tags.length === 0 && \"this is the second method that using conditional rednering\");\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge mr-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/xingkaiyang/Desktop/react-app/src/componets/counter.jsx"],"names":["React","Component","link","Counter","state","count","tags","styles","fontSize","fontWeight","formateCounter","renderTag","length","map","tag","handleIncreament","console","log","render","getBadgeClasses","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,IAArB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAEN;AACA;AACAC,MAAAA,IAAI,EAAE;AAJA,KADsB;AAAA,SAO9BC,MAP8B,GAOrB;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,KAPqB;;AAAA,SAoE9BC,cApE8B,GAoEb,MAAM;AAAA,YACbL,KADa,GACH,KAAKD,KADF,CACbC,KADa;AAErB,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD,KAvE6B;AAAA;;AAW9BM,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,KAA2B,CAA/B,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAP;AACF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,IACtB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CADF;AAOD;;AAEDC,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKT,cAAL,EAA1C,CANF,EAOE;AACE;AACA;AACA,MAAA,OAAO,EAAE,KAAKK,gBAHhB;AAIE,MAAA,SAAS,EAAC,wBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,GAAG,IAAI;AAC1B,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAf,CAAP;AACD,KAFA,CADH,CAhBF,EAqBG,KAAKH,SAAL,EArBH,EAsBG,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,KAA2B,CAA3B,IACC,4DAvBJ,CADF;AA2BD;;AAMDO,EAAAA,eAAe,GAAG;AAChB,QAAIC,OAAO,GAAG,mBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKhB,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOe,OAAP;AACD;;AA7E6B;;AAgFhC,eAAejB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { link } from \"fs\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    // imageUrl: \"https://picsum.photos/300\",\n    // tags: [\"tag1\", \"tag2\", \"tag3\"]\n    tags: []\n  };\n  styles = {\n    fontSize: 50,\n    fontWeight: \"bold\"\n  };\n  renderTag() {\n    if (this.state.tags.length === 0)\n      return <p>There is no items in the list!</p>;\n    return (\n      <ul>\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  handleIncreament() {\n    console.log(\"sdfasdf\");\n  }\n\n  render() {\n    // let classes = \"badge mr-2 badge-\";\n    // classes += this.state.count === 0? \"warning\": \"primary\";\n    // this is dynamically rendering\n\n    // you can refactor above to a method: shortcut: ctrl+shift+r  then you can call the method directly in html\n    // let classes = this.getBadgeClasses();\n\n    // conditional rendering two method: due to there is no if statement in jsx, then below\n    //1. use a function in this case is renderTag()\n    //2. use javascript mechanism ex: true&&'string'&&1 return 1\n    // reason is javacript can && with non-boolean value, non-empty string and non-zero number will be consider as true, then it will return the last condition.\n\n    return (\n      <React.Fragment>\n        {/* <img src={this.state.imageUrl}/> */}\n        {/* two way to add style  */}\n        {/* <span style={this.styles} className=\"badge badge-primary mr-2\">{this.formateCounter()}</span> */}\n        {/* <span style={{fontSize:100}} className=\"badge badge-primary mr-2\">{this.formateCounter()}</span> */}\n\n        <span className={this.getBadgeClasses()}>{this.formateCounter()}</span>\n        <button\n          // here is why is handleIncreament not handleIncreament(),\n          // you pass the reference not the method\n          onClick={this.handleIncreament}\n          className=\"btn btn-primary btn-sm\"\n        >\n          Increment\n        </button>\n        {/* rendering a list */}\n        <ul>\n          {this.state.tags.map(tag => {\n            return <li key={tag}>{tag}</li>;\n          })}\n        </ul>\n        {this.renderTag()}\n        {this.state.tags.length === 0 &&\n          \"this is the second method that using conditional rednering\"}\n      </React.Fragment>\n    );\n  }\n  formateCounter = () => {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  };\n\n  getBadgeClasses() {\n    let classes = \"badge mr-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}