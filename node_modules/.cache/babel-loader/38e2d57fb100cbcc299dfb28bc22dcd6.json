{"ast":null,"code":"var _jsxFileName = \"/Users/xingkaiyang/Desktop/react-app/src/componets/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 3\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleDelete = counterID => {\n      const counters = this.state.counters.filter(c => {\n        return c.id !== counterID;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleRset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleIncrement = counter => {\n      // const counters = [...this.state.counters];\n      // const index = counters.indexOf(counter);\n      // counters[index] = { ...counter };\n      // counters[index].value += 1;\n      // // console.log(this.state.counters[index]);\n      // this.setState({ counters });\n      console.log(counter);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary mb-2\",\n      onClick: this.handleRset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Reset\"), this.state.counters.map(counter => //in order to make value to work, you have to pass it to Counter, this is a .props\n    React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement // value={counter.value}\n      // id={counter.id} // we can just pass the object make code look clean and better\n      ,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/xingkaiyang/Desktop/react-app/src/componets/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","counterID","filter","c","setState","handleRset","map","handleIncrement","counter","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADuB;;AAAA,SAU/BC,YAV+B,GAUhBC,SAAS,IAAI;AAC1B,YAAMJ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,CAAC,IAAI;AAC/C,eAAOA,CAAC,CAACL,EAAF,KAASG,SAAhB;AACD,OAFgB,CAAjB;AAIA,WAAKG,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAhB8B;;AAAA,SAkB/BQ,UAlB+B,GAkBlB,MAAM;AACjB,YAAMR,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBH,CAAC,IAAI;AAC5CA,QAAAA,CAAC,CAACJ,KAAF,GAAU,CAAV;AACA,eAAOI,CAAP;AACD,OAHgB,CAAjB;AAKA,WAAKC,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAzB8B;;AAAA,SA2B/BU,eA3B+B,GA2BbC,OAAO,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KApC8B;AAAA;;AAsC/BG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,KAAKN,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAKG,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBE,OAAO,IAC9B;AAEA,wBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACV,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKE,YAFjB;AAGE,MAAA,WAAW,EAAE,KAAKO,eAHpB,CAIE;AACA;AALF;AAME,MAAA,OAAO,EAAEC,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CALH,CADF;AAoBD;;AA3D8B;;AA8DjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 3 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 }\n    ]\n  };\n\n  handleDelete = counterID => {\n    const counters = this.state.counters.filter(c => {\n      return c.id !== counterID;\n    });\n\n    this.setState({ counters });\n  };\n\n  handleRset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n\n    this.setState({ counters });\n  };\n\n  handleIncrement = counter => {\n    // const counters = [...this.state.counters];\n    // const index = counters.indexOf(counter);\n    // counters[index] = { ...counter };\n    // counters[index].value += 1;\n    // // console.log(this.state.counters[index]);\n    // this.setState({ counters });\n\n    console.log(counter);\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <button className=\"btn btn-primary mb-2\" onClick={this.handleRset}>\n          Reset\n        </button>\n\n        {this.state.counters.map(counter => (\n          //in order to make value to work, you have to pass it to Counter, this is a .props\n\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            // value={counter.value}\n            // id={counter.id} // we can just pass the object make code look clean and better\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}